from snakemake.utils import min_version
from pathlib import Path

##### set minimum snakemake version #####
min_version("8.4.1")


configfile: "config/config.yaml"


include: "rules/common.smk"


if config.get("run").get("delivery"):

    include: "rules/delivery.smk"


rule all:
    input:
        get_final_output_pgen(),
        get_final_output_bed(),


rule list_rs:
    input:
        directory_path=expand(get_pvar(), chrom=[i for i in range(1, 23)]),
    output:
        list_merge_rsid=ws_path("pgen/merge_rsids.txt"),
        list_recode_rsid=ws_path("pgen/recode_rsids.txt"),
        list_pseudo_biallelic_var=ws_path("pgen/pseudo_biallelic_var.txt"),
        list_pseudo_biallelic=ws_path("pgen/pseudo_biallelic.txt"),
    resources:
        rountime=lambda wc, attempt: attempt * 60,
    shell:
        """
tail -n +2 -q {input.directory_path} > {output.list_merge_rsid} && \
awk -F'\t' '$2 in a{{if(a[$2])print a[$2];a[$2]=""; print; next}} {{a[$2]=$0}}' {output.list_merge_rsid} > {output.list_pseudo_biallelic_var} && \
awk -v OFS="\t" 'BEGIN {{print "RSID", "ID"}} {{print $3, $1":"$2":"$4":"$5}}' {output.list_pseudo_biallelic_var} > {output.list_pseudo_biallelic} && \
awk -v OFS="\t" 'BEGIN {{print "SNPID", "rsID", "CHR", "POS", "NEA", "EA"}} {{print $1":"$2":"$4":"$5, $3, $1, $2, $4, $5}}' {output.list_merge_rsid} > {output.list_recode_rsid}
"""


rule recode_pgen:
    input:
        get_pgen(),
    output:
        ws_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        prefix=ws_path("pgen/impute_dedup_recoded_{chrom}"),
        fasta=config.get("fasta_path"),
        pfile=get_pgen(stem=True),
    shell:
        """plink2 \
--pfile {params.pfile} \
--set-all-var-ids '@:#:$r:$a' \
--new-id-max-allele-len 1000 \
--make-pgen \
--out {params.prefix} \
--threads {resources.threads} \
--memory 90000 'require'
"""


rule selected_sample:
    input:
        ws_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.psam"),
    output:
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        fam=config.get("fam_path"),
        pfile=ws_path("pgen/impute_dedup_recoded_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_{chrom}"),
        mind=config.get("plink2_dict").get("mind"),
    shell:
        """plink2 \
--pfile {params.pfile} \
--keep-fam {params.fam} \
--make-pgen \
--mind {params.mind} \
--out {params.prefix} \
--threads {resources.threads} \
--memory 90000 'require'
"""


rule filter_var:
    input:
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.psam"),
    output:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        geno=config.get("plink2_dict").get("geno"),
        hwe=config.get("plink2_dict").get("hwe"),
        mac=config.get("plink2_dict").get("mac"),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --not-chr X Y XY \
 --geno {params.geno} \
 --hwe {params.hwe} \
 --mac {params.mac} \
 --make-pgen \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule create_bgen:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
    output:
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.bgen"
        ),
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.sample"
        ),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        prefix=ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}"
        ),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --export bgen-1.2 \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule qctool:
    input:
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.bgen"
        ),
    output:
        ws_path(
            "pgen/snp-stats_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    container:
        "docker://ghcr.io/ht-diva/containers/qctool:2.2.0"
    resources:
        runtime=lambda wc, attempt: attempt * 240,
    shell:
        """qctool \
-g {input} \
-snp-stats \
-osnp {output} \
-threads {resources.threads} \
    """


rule get_hq_variants:
    input:
        ws_path(
            "pgen/snp-stats_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    output:
        snp_list=ws_path(
            "pgen/hq_variants_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
        log=ws_path("pgen/report_hq_variants_chr{chrom}.log"),
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    shell:
        """
    total_rows=$(grep -v ^#  {input} | wc -l) && \
    echo "Number of rows before filtering for INFO score > 0.7: $total_rows" >> {output.log} && \
    grep -v ^#  {input} | \
    awk '$17 > 0.7 {{ print $2 }}'  >  {output.snp_list} && \
    filtered_rows=$(wc -l < {output.snp_list}) && \
    echo "Number of rows after filtering for INFO score > 0.7: $filtered_rows" >> {output.log}
    """


rule filter_hq_variants:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
        ws_path(
            "pgen/hq_variants_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    output:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}"),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --extract {input[3]} \
 --make-pgen \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule update_pgen_id:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.psam"),
    output:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}"),
        table_mapping=config.get("mapping_table"),
    shell:
        """plink2 \
    --update-name {params.table_mapping} 1 2\
    --pfile {params.pfile} \
    --make-pgen \
    --out {params.prefix} \
    --threads {resources.threads} \
    --memory 90000 'require'
"""


rule update_pgen_alleles:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}.psam"),
    output:
        ws_path(
            "pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.pgen"
        ),
        ws_path(
            "pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.pvar"
        ),
        ws_path(
            "pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.psam"
        ),
    #    info_file=ws_path("pgen/dosage_info_{chrom}"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path(
            "pgen/impute_recoded_selected_sample_filter_hq_var_new_id_{chrom}"
        ),
        out_file=ws_path(
            "pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}"
        ),
        table_mapping=config.get("mapping_table"),
        mapping_table_right_alleles=ws_path("pgen/snp_mapping_right_alleles.tsv"),
    shell:
        """
    paste <(zcat {params.table_mapping} | grep "False" | cut -f1 | cut -d":" -f1-4) <(zcat {params.table_mapping} | grep "False" | cut -f2 | cut -d":" -f3,4 | tr ":" "\t") <(zcat {params.table_mapping} | grep "False" | cut -f1 | cut -d":" -f3,4 | tr ":" "\t") > {params.mapping_table_right_alleles} &&
    plink2 \
    --update-alleles {params.mapping_table_right_alleles} \
    --make-pgen \
    --pfile {params.pfile} \
    --out {params.out_file} \
    --threads {resources.threads} \
    --memory 90000 'require'
"""

#&&
#plink2 \
#--pfile {params.out_file} \
#--pgen -info --threads {resources.threads} & > {output.info_file}

rule pgen2bed:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.psam"),
    output:
        ws_path("bed/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.bed"),
        ws_path("bed/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.bim"),
        ws_path("bed/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}.fam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0",
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}"),
        prefix=ws_path("bed/impute_recoded_selected_sample_filter_hq_var_new_id_alleles_{chrom}"),
    shell:
        """
        plink2 \
            --pfile {params.pfile} \
            --make-bed  \
            --keep-allele-order \
            --out {params.prefix} \
            --threads {resources.threads} \
            --memory 90000 'require'
       """


rule header_info:
    input:
        pgen=get_pgen(),
    output:
        info=ws_path("pgen/impute_dedup_{chrom}.info"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 10,
    shell:
        """
    PFILE=$(echo "{input}" | sed 's/\.[^.]*$//');
plink2 \
--pfile $PFILE \
--pgen-info \
--threads {resources.threads} &> {output.info}
"""