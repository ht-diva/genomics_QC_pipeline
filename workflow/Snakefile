from snakemake.utils import min_version
from pathlib import Path

##### set minimum snakemake version #####
min_version("8.4.1")


configfile: "config/config.yaml"


def get_pgen(stem=False):
    if stem:
        return str(
            Path(config.get("pgen_src_path"), Path(config.get("pgen_template")).stem)
        )
    return str(Path(config.get("pgen_src_path"), config.get("pgen_template")))


def ws_path(file_path):
    return str(Path(config.get("workspace_path"), file_path))


def dest_path(file_path):
    return str(Path(config.get("pgen_dest_path"), file_path))


rule all:
    input:
        expand(
            ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pgen"),
            chrom=[i for i in range(1, 23)],
        ),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_all"),


rule recode_pgen:
    input:
        get_pgen(),
    output:
        ws_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
        ws_path("pgen/impute_dedup_recoded_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        prefix=ws_path("pgen/impute_dedup_recoded_{chrom}"),
        fasta=config.get("fasta_path"),
        pfile=get_pgen(stem=True),
    shell:
        """plink2 \
--pfile {params.pfile} \
--set-all-var-ids '@:#:$r:$a' \
--new-id-max-allele-len 1000 \
--make-pgen \
--out {params.prefix} \
--threads {resources.threads} \
--memory 90000 'require'
"""


rule selected_sample:
    input:
        dest_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
        dest_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
        dest_path("pgen/impute_dedup_recoded_{chrom}.psam"),
    output:
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        fam=config.get("fam_path"),
        pfile=dest_path("pgen/impute_dedup_recoded_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_{chrom}"),
        mind=config.get("plink2_dict").get("mind"),
    shell:
        """plink2 \
--pfile {params.pfile} \
--keep-fam {params.fam} \
--make-pgen \
--mind {params.mind} \
--out {params.prefix} \
--threads {resources.threads} \
--memory 90000 'require'
"""


rule filter_var:
    input:
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_{chrom}.psam"),
    output:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        geno=config.get("plink2_dict").get("geno"),
        hwe=config.get("plink2_dict").get("hwe"),
        mac=config.get("plink2_dict").get("mac"),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --not-chr X Y XY \
 --geno {params.geno} \
 --hwe {params.hwe} \
 --mac {params.mac} \
 --make-pgen \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule create_bgen:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
    output:
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.bgen"
        ),
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.sample"
        ),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        prefix=ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}"
        ),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --export bgen-1.2 \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule qctool:
    input:
        ws_path(
            "pgen/bgen_impute_recoded_selected_sample_filtered_var_chr_{chrom}.bgen"
        ),
    output:
        ws_path(
            "pgen/snp-stats_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    container:
        "docker://gitlab.fht.org:5050/hds-center/containers/qctools:e160ea8f"
    resources:
        runtime=lambda wc, attempt: attempt * 240,
    shell:
        """qctool \
    -g {input} \
    -snp-stats \
    -osnp {output} \
    -threads {resources.threads} \
    """


rule get_hq_variants:
    input:
        ws_path(
            "pgen/snp-stats_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    output:
        snp_list=ws_path(
            "pgen/hq_variants_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
        log=ws_path("pgen/report_hq_variants_chr{chrom}.log"),
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    shell:
        """
        total_rows=$(grep -v ^#  {input} | wc -l) && \
        echo "Number of rows before filtering for INFO score > 0.7: $total_rows" >> {output.log} && \
        grep -v ^#  {input} | \
        awk '$17 > 0.7 {{ print $2 }}'  >  {output.snp_list} && \
        filtered_rows=$(wc -l < {output.snp_list}) && \
        echo "Number of rows after filtering for INFO score > 0.7: $filtered_rows" >> {output.log}
        """


rule filter_hq_variants:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
        ws_path(
            "pgen/hq_variants_impute_recoded_selected_sample_filtered_var_chr_{chrom}.txt"
        ),
    output:
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}.psam"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        pfile=ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}"),
        prefix=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_{chrom}"),
    shell:
        """plink2 \
 --pfile {params.pfile} \
 --extract {input[3]} \
 --make-pgen \
 --out {params.prefix} \
 --threads {resources.threads} \
 --memory 90000 'require'
 """


rule merge_filter_hq_variants:
    input:
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pgen"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.pvar"),
        ws_path("pgen/impute_recoded_selected_sample_filtered_var_{chrom}.psam"),
    output:
        file_list=ws_path("pgen/merge_list.txt"),
        pmerge=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_all"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 60,
    params:
        base_prefix=ws_path("pgen/impute_recoded_selected_sample_filter_hq_var_*.pgen"),
    shell:
        """
ls -1 {params.base_prefix} | cut -f1 -d"." > {output.file_list} \
&& plink2 --pmerge-list {output.pmerge} \
--make-pgen \
--out {output.pmerge} \
 --threads {resources.threads} \
 --memory 90000 'require'
"""


rule header_info:
    input:
        pgen=ws_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
    output:
        info=ws_path("pgen/impute_dedup_recoded_{chrom}.info"),
    params:
        prefix=ws_path("pgen/impute_dedup_recoded_{chrom}"),
    container:
        "docker://quay.io/biocontainers/plink2:2.00a5--h4ac6f70_0"
    resources:
        runtime=lambda wc, attempt: attempt * 10,
    shell:
        """plink2 \
--pfile {params.prefix} \
--pgen-info \
--threads {resources.threads} &> {output.info}
"""


# rule move_to_destination:
#     input:
#         pgen=ws_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
#         pvar=ws_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
#         psam=ws_path("pgen/impute_dedup_recoded_{chrom}.psam"),
#         info=ws_path("pgen/impute_dedup_recoded_{chrom}.info"),
#     output:
#         pgen=dest_path("pgen/impute_dedup_recoded_{chrom}.pgen"),
#         pvar=dest_path("pgen/impute_dedup_recoded_{chrom}.pvar"),
#         psam=dest_path("pgen/impute_dedup_recoded_{chrom}.psam"),
#         info=dest_path("pgen/impute_dedup_recoded_{chrom}.info"),
#     resources:
#         runtime=lambda wc, attempt: attempt * 120,
#     shell:
#         """
#         rsync -rlptoDvz {input.pgen} {output.pgen} && \
#         rsync -rlptoDvz {input.pvar} {output.pvar} && \
#         rsync -rlptoDvz {input.psam} {output.psam} && \
#         rsync -rlptoDvz {input.info} {output.info}"""
